# -*- coding: utf-8 -*-
"""Twitter trends collection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aOYrz3Uf-FJ1nA_5tIaZiT-Ie5Dp8_Jg

# Steps:

    1. Get trending topics using trends_avalible() method from tweepy.
    2. save those trending topics to json and after that create a list of trneding topics names
    3. Now use query method to get those topics tweets and save them in CSV with there query.

# Collecting trending topics

**reference** : https://medium.com/analytics-vidhya/how-to-get-trending-tweets-in-any-country-with-python-and-tweepy-af2bfe760251

## 1. Libray importing
"""


import tweepy
import os
import json
import sys
import datetime
import pandas as pd

"""## 2. Api keys and tokens"""

def authenticate_with_secrets(secret_filepath):
    secret_file = open(secret_filepath)
    secret_data = json.load(secret_file)
    CONSUMER_KEY = secret_data["API_KEY"]
    CONSUMER_SECRET = secret_data["API_SECRET"]
    ACCESS_TOKEN = secret_data["ACCESS_TOKEN"]
    ACCESS_TOKEN_SECRET = secret_data["ACCESS_SECRET"]
    secret_file.close()

    auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
    auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)
    api = tweepy.API(auth)

    return api

"""## 4. Collecting trending topics"""

def trending_topics(api):
    #Avalible locations
    loc = api.trends_available()
    # writing a JSON file that has the available trends around the world
    with open("avalible_locs.json", "w") as wp:
        wp.write(json.dumps(loc, indent=1))
        
        
"""# Saving trending topics """

def saving_trending_topics(json_file_path):
    #loding the dataset
    file = open(json_file_path)
    json_data = json.load(file)
    #saving the trending topics
    trending_topics = []
    for i in range(len(json_data)):
        if json_data[i]['name']:
            trending_topics.append(json_data[i]['name])
                                                
    return trending_topics
                                               
"""# Collecting trending tweets"""

def trending_tweets(api, topics):
    tweets = api.search(q=topics, language='en')
    return tweets

trending_tweets(api, "Worldwide")

def process_raw_tweet(tweet):
    processed_tweet = {}
    processed_tweet['id'] = tweet.id
    processed_tweet['username'] = tweet.user.screen_name
    processed_tweet['tweet_text'] = tweet.text
    processed_tweet['retweets'] = tweet.retweet_count
    processed_tweet['location'] = tweet.user.location
    processed_tweet['created_at'] = tweet.created_at
    return processed_tweet

def upload_tweets(tweets):
    today_date = datetime.date.today()
    file_path = "data/{}/data.csv".format(today_date)
    df = pd.DataFrame.from_dict(tweets, orient='index')
    if not os.path.isfile(file_path):
        file = open(file_path, "w+", encoding='utf-8')
        return df.to_csv(file)
    else: 
        return df.to_csv(file_path, mode='a', header=False)

def main(treding_topics):
    treding_topics = ['Worldwide','Winnipeg','Ottawa','Quebec','Montreal']
    today_date = datetime.date.today()
    processed_tweets = []
    
    for topic in treding_topics:
        file_path = "data/{}/{}/data.csv".format(today_date, topic)
        tweets = trending_tweets(api, topic)
        
        if tweets:
            for tweet in tweets:
                processed_tweets = process_raw_tweet(tweet)
            df = pd.DataFrame.from_dict(processed_tweets, orient='index')
            if not os.path.exists(file_path):
                os.makedirs(file_path)
            else:
                return df.to_csv(file_path, mode='a', header=False)

if __name__ == "__main__":
    main(treding_topics)
